#!/bin/bash
# Define colors
TIME_COLOR="%F{178}"   # Yellow (E5C07B)
SHELL_COLOR="%F{167}"  # Red (E06C75)
GIT_COLOR="%F{215}"    # Orange (F3C267)
PATH_COLOR="%F{75}"    # Blue (61AFEF)
RESET="%f"             # Reset color

# Load Git info
autoload -Uz vcs_info  

# Enable Git and extra features
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' get-revision true  # Get commit hash
zstyle ':vcs_info:git:*' formats '(%b@%c | %u%m)'  # Branch + commit hash
zstyle ':vcs_info:git:*' actionformats '(%b|%a)'  # Rebase, cherry-pick, etc.

# Set colors for Git status (Icons)
GIT_CLEAN="%F{2}✔"  # Green ✔ when clean
GIT_MODIFIED="%F{3}󱦹"  # Yellow * when modified
GIT_UNTRACKED="%F{1}󱀶"  # Red ? when untracked files
GIT_STAGED="%F{4} "  # Blue + when staged changes
GIT_STASHED="%F{5}󰜦"  # Purple $ when stash exists

# Function to count modified files with symbols
GIT_FILES_CHANGED() {
    local changes
    changes=$(git status --porcelain 2>/dev/null | wc -l | tr -d ' ')
    [[ "$changes" -gt 0 ]] && echo "%F{yellow}${changes} files changed%f"
}

# Function to update the prompt dynamically
update_prompt() {
    vcs_info  # Update Git info
    local git_status=""
    
    # Add symbols if there are changes
    [[ -n "${vcs_info_msg_0_}" ]] && git_status=" ${GIT_COLOR}${vcs_info_msg_0_}"
    [[ -n "$(git status --porcelain 2>/dev/null | grep '^ M')" ]] && git_status+=" ${GIT_MODIFIED}"
    [[ -n "$(git status --porcelain 2>/dev/null | grep '^??')" ]] && git_status+=" ${GIT_UNTRACKED}"
    [[ -n "$(git status --porcelain 2>/dev/null | grep '^A ')" ]] && git_status+=" ${GIT_STAGED}"
    [[ -n "$(git stash list 2>/dev/null)" ]] && git_status+=" ${GIT_STASHED}"

    PS1="
${TIME_COLOR}[%D{%H:%M}]${RESET} \
${SHELL_COLOR}❯ ${RESET}%n@%m \
${git_status}${RESET}
${PATH_COLOR}%~${RESET}
❯ "
}

# Ensure the prompt updates before each command
precmd_functions+=(update_prompt)
